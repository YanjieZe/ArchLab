# Yanjie Ze 519021910706

# Execution begins at address 0
        .pos 0
        irmovl stack, %esp          # Set up stack pointer
        call main                   # Execute main program
        halt                        # Terminate program

# Sample linked list
        .align 4
ele1:
        .long 0x00a
        .long ele2
ele2:
        .long 0x0b0
        .long ele3
ele3:
        .long 0xc00
        .long 0

main:
        irmovl ele1, %edi           # Set ele1 as the first param
        call rsum_list              # rsum_list(ele1)
        ret

# int rsum_list(list_ptr ls)
# ls in %edi
rsum_list:
        xorl %eax, %eax             # int val = 0;
        xorl %ecx, %ecx             # Prevent problems
        andl %edi, %edi             # Judge on input
        je finish
        mrmovl (%edi), %eax         # int val = ls->val;
        pushl %eax                  # Save
        mrmovl 4(%edi), %edi        # ls = ls->next;
        call rsum_list
        popl %ecx
finish:
        addl %ecx, %eax
        ret

# Stack starts here and grows to lower address
        .pos 0x200
stack:
